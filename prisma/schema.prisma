// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Enum para os papéis
enum Role {
  ADMIN
  COMERCIAL
  COOPERADO
}

// Modelo base para endereço
model Address {
  id           String  @id @default(uuid())
  street       String  // Rua
  number       String  // Número
  neighborhood String  // Bairro
  city         String  // Cidade
  state        String  // Estado
  postal_code  String  // Código postal
  adminId      String? @unique
  comercialId  String? @unique
  cooperadoId  String? @unique
  admin        Admin?  @relation(fields: [adminId], references: [id], onDelete: Cascade)
  comercial    Comercial? @relation(fields: [comercialId], references: [id], onDelete: Cascade)
  cooperado    Cooperado? @relation(fields: [cooperadoId], references: [id], onDelete: Cascade)
}

// Campos compartilhados entre Admin, Comercial e Cooperado
model Admin {
  id                String   @id @default(uuid())
  cpf         String   @unique
  email             String   @unique
  role              Role     @default(ADMIN)
  first_name        String
  last_name         String
  phone             String
  address           Address? // Relacionamento com Address
  registration_date DateTime @default(now())
  is_active         Boolean  @default(true)
  password          String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Comercial {
  id                String      @id @default(uuid())
  cpf               String      @unique
  email             String      @unique
  role              Role        @default(COMERCIAL)
  first_name        String
  last_name         String
  phone             String
  address           Address?    // Relacionamento com Address
  registration_date DateTime    @default(now())
  is_active         Boolean     @default(true)
  password          String
  cooperados        Cooperado[] // Relacionamento com Cooperado
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model Cooperado {
  id                String      @id @default(uuid())
  cpf               String      @unique
  email             String      @unique
  role              Role        @default(COOPERADO)
  first_name        String
  last_name         String
  phone             String
  address           Address?    // Relacionamento com Address
  registration_date DateTime    @default(now())
  is_active         Boolean     @default(false)
  password          String
  comercialId       String      // Campo para a chave estrangeira
  comercial         Comercial   @relation(fields: [comercialId], references: [id]) // Relacionamento com Comercial
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}
